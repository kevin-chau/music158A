{\rtf1\ansi\ansicpg1252\cocoartf1265
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Avenir-Book;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green0\blue51;\red255\green0\blue0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww18340\viewh19220\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\f0\fs32 \cf0 Karlheinz Essl \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\b\fs52 \cf0 RTC-lib
\b0\fs20  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\b\fs36 \cf0 Real Time Composition Library for Max/MSP/Jitter
\b0\fs30 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\fs34 \cf0 Software library for algorithmic composition in Max/MSP/Jitter
\fs30 \
copyleft 1992-2014 by Karlheinz Essl and others \
{\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/rtc.html"}}{\fldrslt \cf2 http://www.essl.at/works/rtc.html}}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\fs32 \cf0 \
\
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc

\b\fs36 \cf0 RTC-lib for Max
\b0\fs32 \
version 6.0\
released: 31 Jan 2014\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\b\fs40 \cf0 Abstract
\b0\fs28  
\fs32 \
\
This software library - a collection of patches and externals for \cf3 Max/MSP/Jitter\cf0   - offers the possibility to experiment with a number of compositional techniques, such as serial procedures, permutations and controlled randomness. Most of these objects are geared towards straightforward processing of data. By using these specialized objects together in a patch, programming becomes much more clear and easy. Many functions that are often useful in algorithmic composition are provided with this library - therefore the composer could concentrate rather on the composition than the programming aspects.\
\
Originally, the 
\i Real Time Composition Library
\i0  (RTC-lib) was developed during my extensive work on {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/Lexikon-Sonate.html"}}{\fldrslt \cf3 Lexikon-Sonate}} (1992 ff.), an interactive realtime composition for computer-controlled piano which I started at IRCAM, Paris in 1992.\
\
Regardless the fact that it was conceived for a specific project it became more and more obvious that its functionalities are open and generic enough to be used by other composers in different compositional contexts. Based on paradigms which have been extracted from serial thinking (cf. Gottfried Michael Koenig and Karlheinz Stockhausen) and its further development until nowadays it does not force towards a certain aesthetic, but provides a programming environment for testing and developing compositional strategies.\
\
The 
\i Real Time Composition Library
\i0  comes with a Hypertext-like on-line help which allows to have a perfect overview on the library objects and their multiple relationships.\
\
\

\b\fs38 System Requirements
\b0\fs32  \
\
\'95 Apple Macintosh computer with Intel processor\
\'95 MacOS X 10.6 or later\
\'95 Max5 or Max6.x\
\
If you are still using MaxMSP 4.6.3, please use RTC-lib vs. 4.7 which is also available from my website.\
\
\

\b\fs38 Content
\b0\fs22  
\fs32 \
\
The library consists mostly of "abstractions" (Max patches that appear as objects) and a few external objects. Most of them were written by myself, but there are also contributions from other authors like Gerhard Eckel (GMD, St. Augustin) and Serge Lemouton (IRCAM, Paris), James McCartney (namely his generic list objects), and Peter Elsea's (UCSC) selected list objects from his Lobjects library. Other contributions came from Gary Lee Nelson, Les Stuck, Timothy Place, Charles Baker, Trond Lossius and Chris Dobrian. Because the library objects are highly dependent on each other, it is recommended not to take them apart.\
\
\

\b\fs38 Installation
\b0\fs22  
\fs32 \
\
Copy the content of the folders inside the RTC-lib distribution into the specified locations of your Max folder. After starting Max, you should see a window "RTC-Overview.maxhelp" which serves a central navigation tool for the content of the library.\
\
\

\b\fs38 History
\b0\fs32  \
\
The development of the RTC-lib started in 1992 when I was working at IRCAM on a commission - {\field{\*\fldinst{HYPERLINK "http://www.essl.at/works/entsagung.html"}}{\fldrslt \cf4 Entsagung}} for ensemble and live-electronics. Having worked with computer-aided composition algorithms before on an Atari using an experimental LOGO implementation I came across Max. I immediately felt in love with it for it offered the possibility of realtime processing and interactivity. (In LOGO, it took many hours to calculate a score list which I had to transcribe into of musical notation in order to analyze it - a very time-consuming procedure).\
\
At this time, Max appeared as programming environment mainly optimized for MIDI processing. List operations (which are crucial for my own compositional thinking which stems from serialism) have not been implemented yet. Higher-level compositional tools were not available, only customized solutions for specific problems which were not geneneric enough to be used in different contexts.\
\
In order to create an evironment which enables one to concentrate rather on  high-level compositional questions than on low-level technical problems, Gerhard Eckel and I started to develop a set of tools which became the corner stones of the RTC-lib. At the this time, Serge Lemouton (my musical assistant at IRCAM) wrote "nth" according to my indications, James McCartney released his "list objects", and a few years later Peter Elsea developed his "LObjects" (inspired by RTC-lib, as he told me). Some externals from these packages were included into the RTC-lib, and Peter Elsea was nice enough to port some of my abstractions (like trans-log) into C-externals.\
\
On this basis, I developed a large number of higher-level compositional algorithms written as "abstractions" (objects, coded in Max): rhythm generators, harmony generators, chance operations, ramp generators, MSP functions etc. which are often based on those primordial externals that have been implemented by other authors.\
\
Those externals (the low-level side of the RTC-lib) need to be re-compiled for each operation system. We had to make the shift from 68k processors to PPC, and now to OSX. Thanks to Peter Elsea and Thomas Grill most of the externals has been ported to Windows XP and I transformed some Macintosh specific externals back to abstractions. Thanks also to Frank Barknecht who made a version for Pd.\
\
Now the RTC-lib was updated in order to run on the new Intel processors. In order to ease the future maintenance, I reformulated most (but not all!) of the externals to abstractions.\
\
In the latest release for MaxMSP 5.x, most of the remaining externals have been rewritten as abstractions which makes it much easier to maintain the library and to port it to other platforms. Thanks to David Zicarelli and his zl object, most of the indispensable list externals of James McCartney and Serge Lemouton are now already part of Max. For backwards compatibility, I kept the original names of the former externals, but they are replaced by abstractions build around zl.\
\
\

\b\fs38 Literature
\b0\fs32  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\fs36 \cf0 Karlheinz Essl: 
\b \cf3 Lexikon-Sonate
\b0 \cf0 . An Interactive Realtime Composition for Computer-Controlled Piano. 
\fs32 Proceedings of the "Second Brazilian Symposium on Computer Music" (Canela 1995)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
{\field{\*\fldinst{HYPERLINK "http://www.essl.at/bibliogr/lexson-sbcm.html"}}{\fldrslt \cf0 http://www.essl.at/bibliogr/lexson-sbcm.html}}  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\fs36 \cf0 Karlheinz Essl: 
\b \cf3 Strukturgeneratoren
\b0 \cf0 . Algorithmische Komposition in Echtzeit.
\fs32  Beitr\'e4ge zur Elektronischen Musik, ed. by R. H\'f6ldrich und A. Weixler, Vol. 5 (Graz 1996)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
{\field{\*\fldinst{HYPERLINK "http://www.essl.at/bibliogr/struktgen.html"}}{\fldrslt \cf0 http://www.essl.at/bibliogr/struktgen.html  }}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\fs36 \cf0 Karlheinz Essl & Bernhard G\'fcnther: 
\b \cf3 Realtime Composition
\b0 \cf0 . Musik diesseits der Schrift.
\fs32  Positionen, ed. by G. Nauck, Vol. 36 (Berlin 1998)  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
{\field{\*\fldinst{HYPERLINK "http://www.essl.at/bibliogr/realtime-comp.html"}}{\fldrslt \cf0 http://www.essl.at/bibliogr/realtime-comp.html}}\
\
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\b\fs38 \cf0 Feedback
\b0\fs32  \
\
Please report bugs and feature requests to:\
\
Dr. Karlheinz Essl\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
{\field{\*\fldinst{HYPERLINK "http://www.essl.at"}}{\fldrslt \cf2 http://www.essl.at}}\
\
\
31 Jan 2014\
SDG}